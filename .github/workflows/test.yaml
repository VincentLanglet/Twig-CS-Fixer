name: Test

on:
    push:
        branches:
            - main
    pull_request:

jobs:
    test:
        name: PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }}
        runs-on: ubuntu-latest

        env:
            SYMFONY_REQUIRE: ${{matrix.symfony-require}}

        strategy:
            matrix:
                php-version:
                    - 8.0
                    - 8.1
                    - 8.2
                    - 8.3
                dependencies: [highest]
                symfony-require: ['']
                include:
                    - php-version: 8.0
                      dependencies: lowest
                    - php-version: '8.2'
                      dependencies: highest
                      symfony-require: 7.0.*

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install PHP with extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-version }}
                  coverage: pcov
                  tools: composer:v2
                  ini-file: development

            - name: Globally install symfony/flex
              if: matrix.symfony-require != ''
              run: |
                  composer config minimum-stability dev
                  composer global config --no-plugins allow-plugins.symfony/flex true
                  composer global require --no-progress --no-scripts --no-plugins symfony/flex
                  composer remove maglnet/composer-require-checker --dev --no-update

            - name: Install Composer dependencies ${{ matrix.dependencies }}
              uses: ramsey/composer-install@v2
              with:
                  dependency-versions: ${{ matrix.dependencies }}
                  composer-options: --prefer-dist --prefer-stable

            - name: Validate lowest dependencies
              run: vendor/bin/validate-prefer-lowest
              if: ${{ matrix.dependencies == 'lowest' }}

            - name: Run tests with PHPUnit
              run: vendor/bin/phpunit --coverage-clover build/logs/clover.xml

            - name: Send coverage to Codecov
              uses: codecov/codecov-action@v3
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
              with:
                  file: build/logs/clover.xml
